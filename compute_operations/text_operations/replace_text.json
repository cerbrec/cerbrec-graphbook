{
    "name": "replace_text",
    "primitive_name": "replace_text",
    "aliases": [
        "replace_texts",
        "replace_strings",
        "replace_strs",
        "replace_words"
    ],
    "type": "PRIMITIVE_OPERATION",
    "inputs": [
        "text",
        "search_text",
        "replace_with",
        {
            "name": "use_regex",
            "primitive_name": "use_regex",
            "flow_state": "BOOT_SOURCE",
            "shape": [],
            "type": "BOOLEAN",
            "data": true
        }
    ],
    "outputs": [
        "processed_text"
    ],
    "assertions": [
        "{text}_data_type_is_text",
        "{search_text}_data_type_is_text",
        "{search_text}_conforms_to_regular_expression",
        "{text}_shape_is_the_same_as_{search_text}",
        "{replace_with}_data_type_is_text",
        "{replace_with}_shape_is_the_same_as_{search_text}",
        "{processed_text}_data_type_is_text",
        "{processed_text}_shape_is_the_same_as_{replace_with}"
    ],
    "description": [
        "Element-wise replace `text` with `replace_with` based on regular expression `search_text`",
        "if use_regex set as false, then search_text will be treated as plain text",
        "`replace_with` allows regular expression format specifiers"
    ],
    "examples": [
        {
            "inputs": [
                {
                    "name": "text",
                    "data": "hello there world",
                    "type": "TEXT"
                },
                {
                    "name": "search_text",
                    "data": "\\s+",
                    "type": "TEXT"
                },
                {
                    "name": "replace_with",
                    "data": "_",
                    "type": "TEXT"
                }
            ],
            "outputs": [
                {
                    "name": "processed_text",
                    "primitive_name": "processed_text",
                    "data": "hello_there_world",
                    "type": "TEXT",
                    "shape": []
                }
            ]
        },
        {
            "inputs": [
                {
                    "name": "text",
                    "data": [
                        "hello there world",
                        "foo1, bar1, foobar1"
                    ],
                    "type": "TEXT"
                },
                {
                    "name": "search_text",
                    "data": [
                        "\\s+",
                        "\\d,\\s+"
                    ],
                    "type": "TEXT"
                },
                {
                    "name": "replace_with",
                    "data": [
                        "_",
                        "__"
                    ],
                    "type": "TEXT"
                }
            ],
            "outputs": [
                {
                    "name": "processed_text",
                    "primitive_name": "processed_text",
                    "data": [
                        "hello_there_world",
                        "foo__bar__foobar1"
                    ],
                    "type": "TEXT",
                    "shape": [
                        2
                    ]
                }
            ]
        },
        {
            "inputs": [
                {
                    "name": "text",
                    "data": [
                        [
                            "{hello} (there) world!?"
                        ],
                        [
                            "foo13! bar1; foobar99"
                        ]
                    ],
                    "type": "TEXT"
                },
                {
                    "name": "search_text",
                    "data": [
                        [
                            "[^\\w\\s]"
                        ],
                        [
                            "[^a-zA-Z]"
                        ]
                    ],
                    "type": "TEXT"
                },
                {
                    "name": "replace_with",
                    "data": [
                        [
                            ""
                        ],
                        [
                            ""
                        ]
                    ],
                    "type": "TEXT"
                }
            ],
            "outputs": [
                {
                    "name": "processed_text",
                    "primitive_name": "processed_text",
                    "data": [
                        [
                            "hello there world"
                        ],
                        [
                            "foobarfoobar"
                        ]
                    ],
                    "type": "TEXT",
                    "shape": [
                        2,
                        1
                    ]
                }
            ]
        }
    ]
}
