{
    "name": "Randperm",
    "type": "COMPOSITE_OPERATION",
    "description": "Generates a tensor containing a random permutation of integers from 0 to n-1.",
    "aliases": [
        "blank",
        "hierarch",
        "abstract"
    ],
    "inputs": [
        {
            "name": "N",
            "primitive_name": "Input",
            "type": "int",
            "description": "The upper bound (exclusive) of the range of integers to permute. Must be a non-negative integer."
        },
        {
            "name":"dtype",
            "type": "torch.dtype",
            "description": "The desired data type of the output tensor. Default is `torch.int64`.",
            "optional": true,
            "default": "torch.int64"
        },
        {
            "name":"layout",
            "type": "torch.layout",
            "description": "The desired layout of the output tensor. Default is `torch.strided`.",
            "optional": true,
            "default": "torch.strided"
        },
        {
            "name":"device",
            "type": "torch.device",
            "description": "The desired device of the output tensor. Default is the current device.",
            "optional": true,
            "default": "Current device"
        },
        {
            "name":"requires_grad",
            "type": "bool",
            "description": "If True, the returned tensor will be part of the computation graph and will require gradients. Default is False.",
            "optional": true,
            "default": false
        }
    ],
    "outputs": [
        {
            "name": "Output",
            "primitive_name": "Output",
            "type": "Tensor",
            "description": "A tensor containing a random permutation of integers from 0 to n-1, with the specified dtype, device, and layout."
        }
    ],
    
    "notes": [
        "The tensor is shuffled uniformly, meaning all permutations are equally likely.",
        "The function supports both CPU and GPU, depending on the specified `device`.",
        "Ensure that `n` is a non-negative integer; passing a negative value will result in an error."
  ],
  "references": [
    {
      "title": "PyTorch Documentation: randperm",
      "url": "https://pytorch.org/docs/stable/generated/torch.randperm.html"
    }
  ]
}
