{
    "name": "broadcast_to_shape",
    "primitive_name": "broadcast_to_shape",
    "aliases": [
        "tile_to_shape",
        "expand_to_shape",
        "extend_to_shape"
    ],
    "type": "PRIMITIVE_OPERATION",
    "inputs": [
        "target",
        "shape"
    ],
    "outputs": [
        "result"
    ],
    "assertions": [
        "{shape}_data_type_is_integer",
        "{shape}_has_one_dimension",
        "{target}_shape_size_is_less_than_or_equal_to_{shape}_size",
        "every_dimension_size_of_{target}_is_less_than_or_equal_to_the_corresponding_value_of_array_{shape}",
        "{result}_data_type_is_the_same_as_{target}",
        "{result}_shape_is_{shape}",
        "{target}_shape_size_is_less_than_or_equal_to_{result}_shape_size",
        "every_dimension_size_of_{target}_is_less_than_or_equal_to_the_corresponding_dimension_size_of_{result}"
    ],
    "description": [
        "Broadcast each dimension of `target` to the corresponding dimension of `shape`"
    ],
    "examples": [
        {
            "inputs": [
                {
                    "name": "target",
                    "data": [
                        [
                            1,
                            2,
                            3,
                            4,
                            5
                        ]
                    ],
                    "type": "INTEGER"
                },
                {
                    "name": "shape",
                    "data": [
                        2,
                        5
                    ],
                    "type": "INTEGER"
                }
            ],
            "outputs": [
                {
                    "name": "result",
                    "primitive_name": "result",
                    "data": [
                        [
                            1,
                            2,
                            3,
                            4,
                            5
                        ],
                        [
                            1,
                            2,
                            3,
                            4,
                            5
                        ]
                    ],
                    "type": "INTEGER",
                    "shape": [
                        2,
                        5
                    ]
                }
            ]
        },
        {
            "inputs": [
                {
                    "name": "target",
                    "data": [
                        [
                            1.0,
                            1.2,
                            3.3,
                            6.4,
                            9.05
                        ]
                    ],
                    "type": "DECIMAL"
                },
                {
                    "name": "shape",
                    "data": [
                        3,
                        5
                    ],
                    "type": "INTEGER"
                }
            ],
            "outputs": [
                {
                    "name": "result",
                    "primitive_name": "result",
                    "data": [
                        [
                            1.0,
                            1.2,
                            3.3,
                            6.4,
                            9.05
                        ],
                        [
                            1.0,
                            1.2,
                            3.3,
                            6.4,
                            9.05
                        ],
                        [
                            1.0,
                            1.2,
                            3.3,
                            6.4,
                            9.05
                        ]
                    ],
                    "type": "DECIMAL",
                    "shape": [
                        3,
                        5
                    ]
                }
            ]
        }
    ]
}